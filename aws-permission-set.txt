AWS CloudFormation Template for Deploying AWS Permission Sets
This CloudFormation template will:

Create an IAM User
Create a Deployer IAM Role
Attach Policies to the User and Role
Allow the User to Assume the Deployer Role
Steps in Detail
Create an IAM User

A new IAM user is created.
An inline policy (or managed policy) is attached to define its permissions.
Create a Deployer IAM Role

The Deployer Role is created with permissions required to deploy AWS resources.
A trust relationship is defined so that only the IAM User can assume this role.
Attach Policies

The user gets permissions such as iam:PassRole (if needed).
The deployer role gets necessary permissions to deploy resources like EC2, Lambda, or others.
AWS CloudFormation Template
yaml
Copy
Edit
AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to create an IAM User, IAM Role (Deployer), and attach permissions"

Resources:
  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: "CloudDeployerUser"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess  # Example policies
      Policies:
        - PolicyName: "UserInlinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Resource: !GetAtt DeployerRole.Arn

  DeployerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "CloudDeployerRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt IAMUser.Arn
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess  # Grant full deploy access

  DeployerRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "DeployerRolePolicy"
      Roles:
        - !Ref DeployerRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:*"
              - "s3:*"
              - "lambda:*"
              - "cloudformation:*"
            Resource: "*"

Outputs:
  IAMUserARN:
    Description: "IAM User ARN"
    Value: !GetAtt IAMUser.Arn

  DeployerRoleARN:
    Description: "IAM Role ARN for Deployment"
    Value: !GetAtt DeployerRole.Arn
Explanation
IAM User (CloudDeployerUser)

Has AWSCodeDeployFullAccess and IAMFullAccess managed policies.
Has an inline policy allowing it to assume the deployer role.
IAM Role (CloudDeployerRole)

The role is assumed only by the created IAM user.
Has AdministratorAccess to deploy resources.
IAM Policy (DeployerRolePolicy)

Grants permissions to deploy EC2, S3, Lambda, and CloudFormation.
Deployment Steps
Save the template as iam-permissions.yaml
Deploy using AWS CLI:
sh
Copy
Edit
aws cloudformation create-stack --stack-name IAMDeployment --template-body file://iam-permissions.yaml --capabilities CAPABILITY_NAMED_IAM
Once deployed, the IAM user can assume the role to deploy AWS resources.

------------------------------------------------------------------------------------------------------------------

Below is an example of an AWS CloudFormation template that creates an IAM user, a deployer role, and attaches the corresponding policies to both the user and the role. I'll explain each part in detail.

AWS CloudFormation Template
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Create IAM User
  MyUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: 'MyUser'
      Policies:
        - PolicyName: 'MyUserPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObject'
                Resource: '*'

  # Create IAM Role
  DeployerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'DeployerRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'DeployerRolePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                Resource: '*'

  # Attach User to Group
  MyUserGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: 'MyUserGroup'
      Policies:
        - PolicyName: 'MyUserGroupPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObject'
                Resource: '*'
  AttachUserToGroup:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      GroupName: !Ref MyUserGroup
      Users:
        - !Ref MyUser
Explanation
IAM User Creation:

The MyUser resource creates an IAM user named MyUser.
The Policies property attaches an inline policy to the user, allowing s3:ListBucket and s3:GetObject actions on all resources (*).
IAM Role Creation:

The DeployerRole resource creates an IAM role named DeployerRole.
The AssumeRolePolicyDocument specifies that the role can be assumed by EC2 instances (ec2.amazonaws.com).
The Policies property attaches an inline policy to the role, allowing ec2:DescribeInstances, ec2:StartInstances, and ec2:StopInstances actions on all resources (*).
IAM Group and User Attachment:

The MyUserGroup resource creates an IAM group named MyUserGroup with a policy allowing s3:ListBucket and s3:GetObject actions.
The AttachUserToGroup resource adds the MyUser to the MyUserGroup.
This template provides a basic setup for creating an IAM user and a deployer role with specific permissions. You can customize the actions and resources in the policies to fit your requirements.
